# Copyright (C) 2023 Gramine contributors
# SPDX-License-Identifier: BSD-3-Clause

libos.entrypoint = "/bdt/build/fhe-dec"

loader.log_level = "{{ log_level }}"


loader.env.LD_LIBRARY_PATH = "/lib:/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}:/usr/local/lib:$LD_LIBRARY_PATH"

loader.env.OMP_NUM_THREADS = "4"

loader.insecure__use_cmdline_argv = true
loader.insecure__use_host_env = true

sys.enable_sigterm_injection = true



sys.stack.size = "2M"
sys.enable_extra_runtime_domain_names_conf = true

sgx.debug = true
sgx.edmm_enable = {{ 'true' if env.get('EDMM', '0') == '1' else 'false' }}
sgx.enclave_size = "1G"
sgx.max_threads = {{ '1' if env.get('EDMM', '0') == '1' else '32' }}

sgx.remote_attestation = "{{ ra_type }}"
sgx.ra_client_spid = "{{ ra_client_spid }}"
sgx.ra_client_linkable = {{ 'true' if ra_client_linkable == '1' else 'false' }}


fs.mounts = [
  { path = "/usr/", uri = "file:/usr/" },
  { path = "/lib/", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "{{ arch_libdir }}", uri = "file:{{ arch_libdir }}" },
  { path = "/usr/{{ arch_libdir }}", uri = "file:/usr/{{ arch_libdir }}" },
  { path = "{{ entrypoint }}", uri = "file:{{ entrypoint }}" },
  { type = "tmpfs", path = "/tmp" },

  { path = "/bdt/build", uri = "file:/bdt/build" },
  { type = "encrypted", path = "/bdt/build/private_data/", uri = "file:/bdt/build/private_data/", key_name = "data_key" },
]

fs.start_dir = "/bdt/build/"
fs.insecure__keys.data_key = "a5f9d3b207e8c146d2b15e971028e43c"

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:/usr/lib/x86_64-linux-gnu/",
  "file:/lib/x86_64-linux-gnu/",

  "file:/usr/local/lib/libOPENFHEpke.so.1",
  "file:/usr/local/lib/libOPENFHEcore.so.1",
  "file:/usr/local/lib/libOPENFHEbinfhe.so.1",

  "file:/lib/x86_64-linux-gnu/libstdc++.so.6",
  "file:/lib/x86_64-linux-gnu/libgomp.so.1",
  "file:/lib/x86_64-linux-gnu/libgcc_s.so.1",
  "file:/lib/x86_64-linux-gnu/libc.so.6",
  "file:/lib/x86_64-linux-gnu/libm.so.6",
  
  "file:/lib64/ld-linux-x86-64.so.2",

  "file:/bdt/build/fhe-dec",
]

sgx.allowed_files = [
  "file:/bdt/build/private_data/key-private.txt",
  "file:/bdt/build/cryptocontext/cryptocontext.txt",
  "file:/bdt/build/results/output_ciphertext.txt",
  "file:/bdt/build/dec_results/",
  "file:/bdt/build/dec_timing_results.csv",
  "file:/bdt/build/data/config_params.txt"
]


